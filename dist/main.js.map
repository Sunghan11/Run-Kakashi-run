{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/score.js","webpack:///./src/kakashi.js","webpack:///./src/images/kakashi2.png","webpack:///./src/background.js","webpack:///./src/menu.js","webpack:///./src/fireball.js","webpack:///./src/images/fireball.png","webpack:///./src/rock.js","webpack:///./src/images/rocks.png","webpack:///./src/game.js","webpack:///./src/images/backgroundWater.jpg","webpack:///./src/images/darkTrees.png","webpack:///./src/images/grass.png","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Score","this","score","highScore","ctx","font","strokeText","fillText","fillStyle","lineWidth","countScore","getHighScore","CONSTANTS","RUNSPRITE","JUMPSPRITE","SLIDESPRITE","POSESPRITE","Kakashi","jumping","sliding","jumpCount","slideCount","sprites","Image","src","runAnimation","jumpAnimation","poseAnimation","slideAnimation","gameOver","x","y","onGround","position","poseAnimate","poseAnimaton","clearRect","innerWidth","innerHeight","sprite","getFrame","drawImage","jump","slide","draw","left","right","top","bottom","rock","collision","bounds","_overlap","console","log","Background","image","posY","imgWidth","speed","firstRockDistance","rocks","randomRock","generateRockSpacing","Math","floor","random","passed","callback","forEach","kakashi","eachRock","rect1","rect2","shift","newX","push","strokeStyle","fillRect","move","Menu","RunKakashiRun","document","getElementById","addEventListener","e","getElementsByClassName","className","setTimeout","start","FIRESPRITE","Fireball","fireSprites","fireAnimation","beginPath","ROCK_SPRITES","Rock","num","getRock","gameCanvas","bgCtx","treeCtx","grassCtx","background","createBackground","setButtonListeners","restart","obstacles","event","code","gamePlaying","preventDefault","toggleJump","toggleSlide","bgImage","bg","treeImage","tree","grassImage","grass","createFireball","createRock","fireball","fireball2","fireball3","collidesWith","gameStop","focus","generateObstacles","canRestart","gameOverDraw","alert","requestAnimationFrame","update","drawScore","idx","obstacle","outside","splice","canvasContext","getContext"],"mappings":"aACE,IAAIA,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzCG,EAAGH,EACHI,GAAG,EACHH,QAAS,IAUV,OANAI,EAAQL,GAAUM,KAAKJ,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOE,GAAI,EAGJF,EAAOD,QAKfF,EAAoBQ,EAAIF,EAGxBN,EAAoBS,EAAIV,EAGxBC,EAAoBU,EAAI,SAASR,EAASS,EAAMC,GAC3CZ,EAAoBa,EAAEX,EAASS,IAClCG,OAAOC,eAAeb,EAASS,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEZ,EAAoBkB,EAAI,SAAShB,GACX,oBAAXiB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAeb,EAASiB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAeb,EAAS,aAAc,CAAEmB,OAAO,KAQvDrB,EAAoBsB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQrB,EAAoBqB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFA1B,EAAoBkB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOrB,EAAoBU,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRzB,EAAoB6B,EAAI,SAAS1B,GAChC,IAAIS,EAAST,GAAUA,EAAOqB,WAC7B,WAAwB,OAAOrB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBU,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRZ,EAAoBa,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG/B,EAAoBkC,EAAI,SAIjBlC,EAAoBA,EAAoBmC,EAAI,G,0LClF/CC,E,WACF,c,4FAAc,SACVC,KAAKC,MAAQ,EACbD,KAAKE,UAAY,E,yDAGXC,GACN,IAAIF,EAAQ,UAAH,OAAaD,KAAKC,MAAlB,cAA6BD,KAAKE,WAC3CC,EAAIC,KAAO,aACXD,EAAIE,WAAWJ,EAAO,IAAK,IAC3BE,EAAIG,SAASL,EAAO,IAAK,IACzBE,EAAII,UAAY,SAChBJ,EAAIK,UAAY,EAChBR,KAAKS,aACLT,KAAKU,iB,mCAILV,KAAKC,OAAS,I,qCAOd,OAHID,KAAKC,MAAQD,KAAKE,YAClBF,KAAKE,UAAYF,KAAKC,OAEnBD,KAAKE,e,gCAIpBpC,EAAOD,QAAUkC,G,iOC3BjB,IAAMY,EACO,GADPA,EAEQ,GAFRA,EAGa,GAHbA,EAIc,GAGdC,EACI,CAAC,EAAG,EAAG,GAAI,IADfA,EAEI,CAAC,GAAI,EAAG,GAAI,IAFhBA,EAGI,CAAC,IAAK,EAAG,GAAI,IAHjBA,EAII,CAAC,IAAK,EAAG,GAAI,IAJjBA,EAKI,CAAC,IAAK,EAAG,GAAI,IALjBA,EAMI,CAAC,EAAG,GAAI,GAAI,IAGhBC,EACK,CAAC,GAAI,GAAI,GAAI,IADlBA,EAEK,CAAC,IAAK,GAAI,GAAI,IAFnBA,EAGK,CAAC,IAAK,GAAI,GAAI,IAHnBA,EAIK,CAAC,IAAK,GAAI,GAAI,IAJnBA,EAKK,CAAC,EAAG,IAAK,GAAI,IALlBA,EAMK,CAAC,IAAK,IAAK,GAAI,IANpBA,EAOK,CAAC,IAAK,IAAK,GAAI,IAPpBA,EAQK,CAAC,IAAK,IAAK,GAAI,IARpBA,EAUM,CAAC,GAAI,IAAK,GAAI,IAVpBA,EAWM,CAAC,IAAK,IAAK,GAAI,IAXrBA,EAYM,CAAC,IAAK,IAAK,GAAI,IAGrBC,EACM,CAAC,IAAI,IAAI,GAAG,IAGlBC,EACK,CAAC,EAAG,IAAK,GAAI,IADlBA,EAEK,CAAC,GAAI,IAAK,GAAI,IAmNVC,E,WA3MX,c,4FAAc,SAEVhB,KAAKiB,SAAU,EACfjB,KAAKkB,SAAU,EACflB,KAAKmB,UAAY,EACjBnB,KAAKoB,WAAa,EAClBpB,KAAKqB,QAAU,IAAIC,MACnBtB,KAAKqB,QAAQE,ICtDN,0BDuDPvB,KAAKwB,aAAe,EACpBxB,KAAKyB,cAAgB,EACrBzB,KAAK0B,cAAgB,EACrB1B,KAAK2B,eAAiB,EACtB3B,KAAK4B,UAAW,EAChB5B,KAAK6B,EAAI,IACT7B,KAAK8B,EAAI,I,sDAIL9B,KAAKiB,UACkB,IAAnBjB,KAAKmB,WAAoBnB,KAAK+B,WAIJ,IAAnB/B,KAAKmB,WAAoBnB,KAAK+B,YAKrC/B,KAAKgC,SAAS,GAAK,IACnBhC,KAAKmB,UAAY,EACjBnB,KAAKiB,SAAU,IANfjB,KAAKmB,UAAY,EACjBnB,KAAKgC,SAAS,IAAMrB,EAAqBA,EAAoBX,KAAKmB,YALlEnB,KAAKgC,SAAS,IAAMrB,EAAqBA,EAAoBX,KAAKmB,UAClEnB,KAAKmB,WAAa,M,8BAetBnB,KAAKkB,UACkB,IAApBlB,KAAKoB,YAAoBpB,KAAK+B,YAC7B/B,KAAKgC,SAAS,GAAK,IACnBhC,KAAKoB,YAAc,IAEnBpB,KAAKgC,SAAS,GAAK,IACnBhC,KAAKoB,WAAa,EAClBpB,KAAKkB,SAAU,M,iCAMvB,OAA4B,MAArBlB,KAAKgC,SAAS,IAAchC,KAAKgC,SAAS,IAAM,M,oCAIlC,IAAjBhC,KAAKkB,UACLlB,KAAKiB,SAAU,K,qCAKE,IAAjBjB,KAAKiB,UACLjB,KAAKkB,SAAU,K,iCAKnB,OAAIlB,KAAK4B,UAAY5B,KAAK0B,cAAgB,IACtC1B,KAAKiC,aAAe,EACblB,GACAf,KAAK4B,UAAY5B,KAAK0B,cAAgB,IAC7C1B,KAAK0B,eAAiB,EACfX,GACAf,KAAK4B,UAAkC,KAAtB5B,KAAKkC,cAC7BlC,KAAK0B,cAAgB,EACdX,GACDf,KAAKkB,SAAWlB,KAAK+B,YAAc/B,KAAK2B,eAAiB,IAC/D3B,KAAK2B,gBAAkB,EAChBb,GACDd,KAAK2B,gBAAkB,IAC7B3B,KAAKkB,SAAU,EACflB,KAAKgC,SAAS,GAAK,IACnBhC,KAAK2B,eAAiB,EACff,GACAZ,KAAK+B,YAAc/B,KAAKwB,aAAe,GAC9CxB,KAAKwB,cAAgB,EACdZ,GACAZ,KAAK+B,YAAc/B,KAAKwB,aAAe,IAC9CxB,KAAKwB,cAAgB,EACdZ,GACAZ,KAAK+B,YAAc/B,KAAKwB,aAAe,IAC9CxB,KAAKwB,cAAgB,EACdZ,GACAZ,KAAK+B,YAAc/B,KAAKwB,aAAe,IAC9CxB,KAAKwB,cAAgB,EACdZ,GACAZ,KAAK+B,YAAc/B,KAAKwB,aAAe,IAC9CxB,KAAKwB,cAAgB,EACdZ,GACAZ,KAAK+B,YAAc/B,KAAKwB,aAAe,IAC9CxB,KAAKwB,cAAgB,EACdZ,GACAZ,KAAK+B,YAAc/B,KAAKwB,cAAgB,IAC/CxB,KAAKwB,aAAe,EACbZ,IACCZ,KAAK+B,YAAc/B,KAAKyB,cAAgB,GAChDzB,KAAKyB,eAAiB,EACfZ,IACCb,KAAK+B,YAAc/B,KAAKyB,cAAgB,GAChDzB,KAAKyB,eAAiB,EACfZ,IACCb,KAAK+B,YAAc/B,KAAKyB,cAAgB,IAChDzB,KAAKyB,eAAiB,EACfZ,IACCb,KAAK+B,YAAc/B,KAAKyB,cAAgB,IAChDzB,KAAKyB,eAAiB,EACfZ,IACCb,KAAK+B,YAAc/B,KAAKyB,cAAgB,IAChDzB,KAAKyB,eAAiB,EACfZ,IACCb,KAAK+B,YAAc/B,KAAKyB,cAAgB,IAChDzB,KAAKyB,eAAiB,EACfZ,IACCb,KAAK+B,YAAc/B,KAAKyB,cAAgB,IAChDzB,KAAKyB,eAAiB,EACfZ,IACCb,KAAK+B,YAAc/B,KAAKyB,cAAgB,IAChDzB,KAAKyB,eAAiB,EACfZ,IAICb,KAAK+B,YAAc/B,KAAKyB,cAAgB,IAChDzB,KAAKyB,eAAiB,EACfZ,IACCb,KAAK+B,YAAc/B,KAAKyB,cAAgB,IAChDzB,KAAKyB,eAAiB,EACfZ,IACCb,KAAK+B,YAAc/B,KAAKyB,cAAgB,IAChDzB,KAAKyB,eAAiB,EACfZ,IACCb,KAAK+B,YAAc/B,KAAKyB,eAAiB,IACjDzB,KAAKyB,cAAgB,EACdb,IAKPZ,KAAK2B,eAAiB,EACff,K,2BAIVT,GACDA,EAAIgC,UAAU,EAAG,EAAGC,WAAYC,aAChC,IAAMC,EAAStC,KAAKuC,WACpBpC,EAAIqC,UACAxC,KAAKqB,QACLiB,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPtC,KAAKgC,SAAS,GACdhC,KAAKgC,SAAS,GACdM,EAAO,GACPA,EAAO,M,6BAIRnC,GACHH,KAAKyC,OACLzC,KAAK0C,QACL1C,KAAK2C,KAAKxC,K,+BAIV,MAAO,CACHyC,KAAM5C,KAAK6B,EACXgB,MAAO7C,KAAK6B,EAAIlB,EAChBmC,IAAK9C,KAAK8B,EACViB,OAAQ/C,KAAK8B,EAAInB,K,mCAIZqC,GAAM,WACXC,GAAY,EAehB,OAdiB,SAACD,GACd,QAAIA,EAAKE,SAASN,KAAO,EAAKM,SAASL,OAASG,EAAKE,SAASL,MAAQ,EAAKK,SAASN,MAGhFI,EAAKE,SAASJ,IAAM,EAAKI,SAASH,QAAUC,EAAKE,SAASH,OAAS,EAAKG,SAASJ,KAMjFK,CAASH,KACTC,GAAY,EACZG,QAAQC,IAAI,QAEbJ,O,sMErPf,IAAMtC,EAEU,EAFVA,EAGe,EAHfA,EAKU,GA8HD2C,E,WAxHX,WAAYnD,EAAKoD,EAAOC,EAAMC,EAAUC,I,4FAAO,SAC3C1D,KAAKuD,MAAQA,EACbvD,KAAK0D,MAAQA,EACb1D,KAAK6B,EAAI,EACT7B,KAAK8B,EAAI0B,EACTxD,KAAKyD,SAAWA,EAChBzD,KAAKG,IAAMA,EAGX,IAAMwD,EACF3D,KAAKyD,SAAwC,GAA5B9C,EAAiCA,EAEtDX,KAAK4D,MAAQ,CAET5D,KAAK6D,WAAWF,GAChB3D,KAAK6D,WAAWF,EAAoB3D,KAAK8D,uBACzC9D,KAAK6D,WAAWF,EAAkD,EAA7B3D,KAAK8D,wB,qEAK9C,OAAOC,KAAKC,MAAsB,IAAhBD,KAAKE,SAAiB,O,iCAGjCpC,GAUP,MAPa,CACTe,KAAMf,EACNgB,MAAOlC,EAAuBkB,EAC9BiB,IAAK,IACLC,OANW,IAOXmB,QAAQ,K,+BAKPC,GACLnE,KAAK4D,MAAMQ,QAAQD,EAAS5E,KAAKS,S,iCAG1BqE,EAASF,GAChBnE,KAAKsE,UAAS,SAACtB,GACPA,EAAKH,MAAQwB,EAAQzB,OAChBI,EAAKkB,SACNlB,EAAKkB,QAAS,EACdC,W,mCAMHE,GACT,IASIpB,GAAY,EAOhB,OANAjD,KAAKsE,UAAS,SAACtB,GAVE,IAACuB,EAAOC,IAWFH,GAXLE,EAWDvB,GAVHJ,KAAO4B,EAAM3B,OAAS0B,EAAM1B,MAAQ2B,EAAM5B,MAGhD2B,EAAMzB,IAAM0B,EAAMzB,QAAUwB,EAAMxB,OAASyB,EAAM1B,MAQ7CG,GAAY,EACZG,QAAQC,IAAI,WAGjBJ,I,kCAQP,GAJAjD,KAAKsE,UAAS,SAAStB,GACnBA,EAAKJ,MAAQjC,EACbqC,EAAKH,OAASlC,KAEdX,KAAK4D,MAAM,GAAGf,OAAS,EAAG,CAC1B7C,KAAK4D,MAAMa,QACX,IAAMC,EAAO1E,KAAK4D,MAAM,GAAGhB,KAAO5C,KAAK8D,sBACvC9D,KAAK4D,MAAMe,KAAK3E,KAAK6D,WAAWa,O,kCAKpC1E,KAAKsE,UAAS,SAAStB,GACnBhD,KAAKG,IAAII,UAAY,OACrBP,KAAKG,IAAIyE,YAAc,QACvB5E,KAAKG,IAAI0E,SACL7B,EAAKJ,KACLI,EAAKF,IACLnC,EACAqC,EAAKD,a,6BAOb/C,KAAKG,IAAIgC,UAAU,EAAG,EAAG,IAAM,KAC/BnC,KAAKG,IAAIqC,UAAUxC,KAAKuD,MAAOvD,KAAK6B,EAAG7B,KAAK8B,GAC5C9B,KAAKG,IAAIqC,UAAUxC,KAAKuD,MAAOvD,KAAK6B,EAAI7B,KAAKyD,SAAUzD,KAAK8B,GACxD9B,KAAKyD,SAAW,KAChBzD,KAAKG,IAAIqC,UAAUxC,KAAKuD,MAAOvD,KAAK6B,EAAoB,EAAhB7B,KAAKyD,SAAczD,KAAK8B,GAEhE9B,KAAK6B,IAAM7B,KAAKyD,WAChBzD,KAAK6B,EAAI,GAEb7B,KAAK8E,S,6BAKL9E,KAAK6B,GAAK7B,KAAK0D,W,gDCvHVqB,EAAO,SACJC,GACKC,SAASC,eAAe,eAEhCC,iBAAiB,SAAS,SAAAC,GARtBH,SAASI,uBAAuB,QAAQ,GAChDC,UAAY,aAUTC,YAAW,kBAAMP,EAAcQ,MAAM,UAAS,S,sKCT1D,IAAM7E,EACK,EAOL8E,EACK,CAAC,EAAG,EAAG,GAAI,IADhBA,EAEK,CAAC,EAAG,GAAI,GAAI,IAFjBA,EAGK,CAAC,EAAG,GAAI,GAAI,IAHjBA,EAIK,CAAC,EAAG,IAAK,GAAI,IAgETC,E,WA5DX,c,4FAAc,SACV1F,KAAK2F,YAAc,IAAIrE,MACvBtB,KAAK2F,YAAYpE,ICrBV,0BDsBPvB,KAAK4F,cAAgB,E,0DAIrB,OAAG5F,KAAK4F,cAAgB,GACpB5F,KAAK4F,eAAiB,EACfH,GACAzF,KAAK4F,cAAgB,IAC5B5F,KAAK4F,eAAiB,EACfH,GACAzF,KAAK4F,cAAgB,IAC5B5F,KAAK4F,eAAiB,EACfH,GACAzF,KAAK4F,cAAgB,IAC5B5F,KAAK4F,eAAiB,EACfH,IAEPzF,KAAK4F,cAAgB,EACdH,K,2BAIVtF,GACDA,EAAI0F,YAEJzC,QAAQC,IAAI,aAEZ,IAAMf,EAAStC,KAAKuC,WACpBpC,EAAIqC,UACAxC,KAAK2F,YACLrD,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPtC,KAAKgC,SAAS,GACdhC,KAAKgC,SAAS,GACdM,EAAO,GACPA,EAAO,M,6BAOXtC,KAAKgC,SAAS,IAAMrB,I,gCAIpB,OAAOX,KAAKgC,SAAS,IAAM,M,6BAGxB7B,GACHH,KAAK2C,KAAKxC,GACVH,KAAK8E,Y,sMEzEb,IAAMnE,EACK,EADLA,EAEU,GAFVA,EAGW,GAGXmF,EACK,CAAC,EAAE,EAAE,GAAG,IADbA,EAEK,CAAC,GAAG,EAAE,GAAG,IAFdA,EAGK,CAAC,IAAI,EAAE,GAAG,IAkENC,E,WA7DX,c,4FAAc,SACV/F,KAAK4D,MAAQ,IAAItC,MACjBtB,KAAK4D,MAAMrC,IClBJ,uBDmBPvB,KAAKgG,IAAMjC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,E,yDAM3C,OAAiB,IAAbjE,KAAKgG,IACEF,EACa,IAAb9F,KAAKgG,IACLF,EAEAA,I,2BAIV3F,GACDA,EAAI0F,YAEJzC,QAAQC,IAAI,QAEZ,IAAMf,EAAStC,KAAKiG,UACpB9F,EAAIqC,UACAxC,KAAK4D,MACLtB,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPtC,KAAKgC,SAAS,GACdhC,KAAKgC,SAAS,GAGdM,EAAO,GACPA,EAAO,M,+BAKX,MAAO,CACHM,KAAM5C,KAAKgC,SAAS,GACpBa,MAAO7C,KAAKgC,SAAS,GAAKrB,EAC1BmC,IAAK9C,KAAKgC,SAAS,GACnBe,OAAQ/C,KAAKgC,SAAS,GAAKrB,K,6BAK/BX,KAAKgC,SAAS,IAAMrB,I,6BAMjBR,GACHH,KAAK2C,KAAKxC,GACVH,KAAK8E,Y,0MEsKEE,E,WAnOX,WAAY7E,EAAK+F,EAAYC,EAAOC,EAASC,I,4FAAU,SACnDrG,KAAKG,IAAMA,EACXH,KAAKkG,WAAaA,EAClBlG,KAAKqE,QAAU,IAAIrD,EAInBhB,KAAKgD,KAAO,IAAI+C,EAChB/F,KAAKC,MAAQ,IAAIF,IAAM,GACvBC,KAAKyC,KAAOzC,KAAKyC,KAAKlD,KAAKS,MAC3BA,KAAK0C,MAAQ1C,KAAK0C,MAAMnD,KAAKS,MAC7BA,KAAK2C,KAAO3C,KAAK2C,KAAKpD,KAAKS,MAC3BA,KAAKsG,WAAatG,KAAKuG,iBAAiBJ,EAAOC,EAASC,GACxDrG,KAAKwG,qBACLxG,KAAKyG,QAAUzG,KAAKyG,QAAQlH,KAAKS,MACjCA,KAAK0G,UAAY,GAIjB3B,EAAiB/E,M,oDAKhB2G,GACmB,UAAfA,EAAMC,MAAmC,SAAfD,EAAMC,MAAkC,YAAfD,EAAMC,OAAuB5G,KAAK6G,cACtFF,EAAMG,iBACN9G,KAAKqE,QAAQ0C,gB,4BAIfJ,GACkB,gBAAfA,EAAMC,MAAyC,SAAfD,EAAMC,MAAkC,cAAfD,EAAMC,OAAyB5G,KAAK6G,cAC9FF,EAAMG,iBACN9G,KAAKqE,QAAQ2C,iB,2CAKA,WACjBhH,KAAKkG,WAAWf,iBAAiB,UAAWnF,KAAKyC,MACjDzC,KAAKkG,WAAWf,iBAAiB,UAAWnF,KAAK0C,OACjD1C,KAAKkG,WAAWf,iBAAiB,UAAWnF,KAAKyG,SACjDzG,KAAKkG,WAAWf,iBAAiB,WAAW,SAAAC,GACzB,WAAXA,EAAEwB,MAAqB,EAAKC,aAC5BzB,EAAE0B,sB,uCAKGX,EAAOC,EAASC,GAC7B,IAAMY,EAAU,IAAI3F,MACpB2F,EAAQ1F,IChED,iCDiEPvB,KAAKkH,GAAK,IAAI5D,EAAW6C,EAAOc,GAAU,GAAI,KAAM,GAEpD,IAAME,EAAY,IAAI7F,MACtB6F,EAAU5F,IEpEH,2BFqEPvB,KAAKoH,KAAO,IAAI9D,EAAW8C,EAASe,EAAW,IAAK,IAAK,GAEzD,IAAME,EAAa,IAAI/F,MACvB+F,EAAW9F,IGxEJ,uBHyEPvB,KAAKsH,MAAQ,IAAIhE,EAAW+C,EAAUgB,EAAY,IAAK,IAAK,K,0CAMxDrH,KAAKuH,iBACLvH,KAAKwH,e,iDAOT,OAAOzD,KAAKC,MAAsB,IAAhBD,KAAKE,SAAiB,O,mCAG/BE,GACTnE,KAAK0G,UAAUtC,QAAQD,EAAS5E,KAAKS,S,uCA8BrC,OAzBAA,KAAKyH,SAAW,KAChBzH,KAAK0H,UAAY,KACjB1H,KAAK2H,UAAY,KAEjB3H,KAAKyH,SAAW,IAAI/B,EACpB1F,KAAK0H,UAAY,IAAIhC,EACrB1F,KAAK2H,UAAY,IAAIjC,EACrB1F,KAAKyH,SAASzF,SAAW,CAAC,IAAK,KAC/BhC,KAAK0H,UAAU1F,SAAW,CAAC,IAAK,KAChChC,KAAK2H,UAAU3F,SAAW,CAAC,IAAK,KACE,IAA9BhC,KAAKyH,SAASzF,SAAS,KACvBhC,KAAKyH,SAAW,KAChBzH,KAAKyH,SAAW,IAAI/B,EACpB1F,KAAKyH,SAASzF,SAAW,CAAC,IAAK,MAMnChC,KAAK0G,UAAU/B,KAAK,YAChB3E,KAAKyH,SAASzF,SAAS,GAAK,KAC5BhC,KAAK0G,UAAUjC,QAIZzE,KAAKyH,W,mCAIZzH,KAAKgD,KAAO,IAAI+C,EAChB/F,KAAKgD,KAAKhB,SAAW,CAAC,KAAK,O,gCAI3BhC,KAAKqE,QAAQoC,UACbzG,KAAK4B,UAAW,EAEhB5B,KAAKC,MAAQ,EACbD,KAAKqE,QAAU,IAAIrD,EACnBhB,KAAKgD,KAAO,IAAI+C,EAChB/F,KAAKyH,SAAW,IAAI/B,EACpB1F,KAAKsG,WAAa,IAAIhD,EAEtBtD,KAAK2C,S,iCAIL3C,KAAKqE,QAAQuD,aAAa5H,KAAKgD,MAC/BhD,KAAK6H,a,qCAIL7H,KAAKG,IAAIC,KAAO,aAChBJ,KAAKK,WAAW,YAAa,GAAI,IACjCL,KAAKG,IAAIC,KAAO,aAChBJ,KAAKK,WAAW,4B,8BAIhB4E,SAASC,eAAe,UAAU4C,QAClC9H,KAAK6G,aAAc,EACnB7G,KAAK4B,UAAW,EAChB5B,KAAKC,MAAMA,MAAQ,EACnBD,KAAKqE,QAAQrC,SAAW,CAAC,IAAK,KAE9BhC,KAAKwH,aACLxH,KAAK+H,oBACL/H,KAAKgI,YAAa,EAKlBhI,KAAK2C,S,iCAIL3C,KAAK4B,UAAW,EAChB5B,KAAKiI,eACLjI,KAAKgI,YAAa,I,kCAGV5C,GACM,MAAVA,EAAE9F,KAAeU,KAAKgI,aACtB5C,EAAE0B,iBACF9G,KAAKwF,W,6BAIL,WACJ,GAAKxF,KAAK4B,SA8CNsG,MAAMlI,KAAKC,OACXD,KAAKyG,cA/CW,CAChB0B,sBAAsBnI,KAAK2C,MAC3B3C,KAAKqE,QAAQ+D,OAAOpI,KAAKG,KACzBH,KAAKC,MAAMoI,UAAUrI,KAAKG,KAC1BH,KAAKkH,GAAGvE,OACR3C,KAAKoH,KAAKzE,OACV3C,KAAKsH,MAAM3E,OAGX3C,KAAKyH,SAASW,OAAOpI,KAAKG,KAC1BH,KAAK0H,UAAUU,OAAOpI,KAAKG,KAC3BH,KAAK2H,UAAUS,OAAOpI,KAAKG,KAC3BH,KAAKgD,KAAKoF,OAAOpI,KAAKG,KACtB,IAAImI,EAAM,KACVtI,KAAK0G,UAAUtC,SAASmE,SAAU,SAAAxK,IACH,IAAvBwK,SAASC,YACTF,EAAMvK,EACNqF,QAAQC,IAAI,aAE6B,IAAzC,EAAKgB,QAAQuD,aAAa,EAAK5E,OAC/BI,QAAQC,IAAI,UAGR,OAARiF,GACAtI,KAAK0G,UAAU+B,OAAOH,EAAK,S,gCI9M3CrD,SAASE,iBAAiB,oBAAoB,WAU1C,IAAMe,EAAajB,SAASC,eAAe,UACrCwD,EAAgBxC,EAAWyC,WAAW,MAGtCxC,EADWlB,SAASC,eAAe,aAClByD,WAAW,MAG5BvC,EADanB,SAASC,eAAe,eAChByD,WAAW,MAGhCtC,EADcpB,SAASC,eAAe,gBACfyD,WAAW,MAE3B,IAAI3D,EAAc0D,EAAexC,EAAYC,EAAOC,EAASC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","class Score {\r\n    constructor() {\r\n        this.score = 0;\r\n        this.highScore = 0;\r\n    }\r\n\r\n    drawScore(ctx) {\r\n        let score = `Score: ${this.score} / ${this.highScore}`;\r\n        ctx.font = \"16px Arial\";\r\n        ctx.strokeText(score, 640, 40);\r\n        ctx.fillText(score, 640, 40);\r\n        ctx.fillStyle = 'orange';\r\n        ctx.lineWidth = 3;\r\n        this.countScore();\r\n        this.getHighScore();\r\n    }\r\n\r\n    countScore() {\r\n        this.score += 1;\r\n    }\r\n\r\n    getHighScore() {\r\n        if (this.score > this.highScore) {\r\n            this.highScore = this.score;\r\n        }\r\n        return this.highScore;\r\n    }\r\n}\r\n\r\nmodule.exports = Score;\r\n","import kakashi2Src from \"./images/kakashi2.png\"\r\n\r\nconst CONSTANTS = {\r\n    GRAVITY: 0.4,\r\n    VELOCITY: 11,\r\n    KAKASHI_WIDTH: 55,\r\n    KAKASHI_HEIGHT: 55,\r\n}\r\n\r\nconst RUNSPRITE = {\r\n    run1: [0, 0, 55, 55],\r\n    run2: [55, 0, 55, 55],\r\n    run3: [110, 0, 55, 55],\r\n    run4: [165, 0, 55, 55],\r\n    run5: [220, 0, 55, 55],\r\n    run6: [0, 55, 55, 55]\r\n}\r\n\r\nconst JUMPSPRITE = {\r\n    jump1: [55, 55, 55, 55],\r\n    jump2: [110, 55, 55, 55],\r\n    jump3: [165, 55, 55, 55],\r\n    jump4: [220, 55, 55, 55],\r\n    jump5: [0, 110, 55, 55],\r\n    jump6: [110, 110, 55, 55],\r\n    jump7: [165, 110, 55, 55],\r\n    jump8: [220, 165, 55, 55],\r\n    jump9: [0, 165, 55, 55],\r\n    jump10: [55, 110, 55, 55],\r\n    jump11: [110, 165, 55, 55],\r\n    jump12: [220, 165, 55, 55],\r\n}\r\n\r\nconst SLIDESPRITE = {\r\n    slide1: [220,220,55,55],\r\n}\r\n\r\nconst POSESPRITE = {\r\n    pose1: [0, 220, 55, 55],\r\n    pose2: [55, 220, 55, 55],\r\n    pose3: [110, 220, 55, 55],\r\n    pose4: [165, 220, 55, 55],\r\n}\r\n\r\n\r\nclass Kakashi {\r\n\r\n    constructor() {\r\n        // this.position = props.position;\r\n        this.jumping = false;\r\n        this.sliding = false;\r\n        this.jumpCount = 0;\r\n        this.slideCount = 0;\r\n        this.sprites = new Image();\r\n        this.sprites.src = kakashi2Src;\r\n        this.runAnimation = 0;\r\n        this.jumpAnimation = 0;\r\n        this.poseAnimation = 0;\r\n        this.slideAnimation = 0;\r\n        this.gameOver = false;\r\n        this.x = 100;\r\n        this.y = 220;\r\n    }\r\n\r\n    jump() {\r\n        if (this.jumping) {\r\n            if (this.jumpCount === 0 || !this.onGround()) {\r\n                this.position[1] -= CONSTANTS.VELOCITY - CONSTANTS.GRAVITY * this.jumpCount;\r\n                this.jumpCount += 1;\r\n                // this.jumping = false;\r\n            } else if (this.jumpCount === 1 && !this.onGround()) {\r\n                this.jumpCount = 0;\r\n                this.position[1] -= CONSTANTS.VELOCITY - CONSTANTS.GRAVITY * this.jumpCount;\r\n                // }\r\n            } else {\r\n                this.position[1] = 220;\r\n                this.jumpCount = 0;\r\n                this.jumping = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    slide() {\r\n        if (this.sliding) {\r\n            if(this.slideCount === 0 || this.onGround()) {\r\n                this.position[1] = 230;\r\n                this.slideCount += 1\r\n            } else {\r\n                this.position[1] = 220;\r\n                this.slideCount = 0;\r\n                this.sliding = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    onGround() {\r\n        return this.position[0] === 100 && this.position[1] >= 220;\r\n    }\r\n    \r\n    toggleJump() {\r\n        if (this.sliding !== true) {\r\n            this.jumping = true;\r\n        }\r\n    }\r\n    \r\n    toggleSlide() {\r\n        if (this.jumping !== true) {\r\n            this.sliding = true;\r\n        }\r\n    }\r\n\r\n    getFrame() {\r\n        if (this.gameOver && this.poseAnimation < 10) {\r\n            this.poseAnimate += 1;\r\n            return POSESPRITE.pose1;\r\n        } else if (this.gameOver && this.poseAnimation < 20) {\r\n            this.poseAnimation += 1;\r\n            return POSESPRITE.pose2;\r\n        } else if (this.gameOver && this.poseAnimaton === 20) {\r\n            this.poseAnimation = 0;\r\n            return POSESPRITE.pose1;\r\n        } else if(this.sliding && this.onGround() && this.slideAnimation < 50) {\r\n            this.slideAnimation += 1;\r\n            return SLIDESPRITE.slide1;\r\n        }else if (this.slideAnimation >= 50) {\r\n            this.sliding = false;\r\n            this.position[1] = 220;\r\n            this.slideAnimation = 0;\r\n            return RUNSPRITE.run1;\r\n        } else if (this.onGround() && this.runAnimation < 5) {\r\n            this.runAnimation += 1;\r\n            return RUNSPRITE.run1;\r\n        } else if (this.onGround() && this.runAnimation < 10) {\r\n            this.runAnimation += 1;\r\n            return RUNSPRITE.run2;\r\n        } else if (this.onGround() && this.runAnimation < 15) {\r\n            this.runAnimation += 1;\r\n            return RUNSPRITE.run3;\r\n        } else if (this.onGround() && this.runAnimation < 20) {\r\n            this.runAnimation += 1;\r\n            return RUNSPRITE.run4;\r\n        } else if (this.onGround() && this.runAnimation < 25) {\r\n            this.runAnimation += 1;\r\n            return RUNSPRITE.run5;\r\n        } else if (this.onGround() && this.runAnimation < 30) {\r\n            this.runAnimation += 1;\r\n            return RUNSPRITE.run6;\r\n        } else if (this.onGround() && this.runAnimation >= 30) {\r\n            this.runAnimation = 0;\r\n            return RUNSPRITE.run1;\r\n        } else if (!this.onGround() && this.jumpAnimation < 4) {\r\n            this.jumpAnimation += 1;\r\n            return JUMPSPRITE.jump1;\r\n        } else if (!this.onGround() && this.jumpAnimation < 8) {\r\n            this.jumpAnimation += 1;\r\n            return JUMPSPRITE.jump2;\r\n        } else if (!this.onGround() && this.jumpAnimation < 12) {\r\n            this.jumpAnimation += 1;\r\n            return JUMPSPRITE.jump3;\r\n        } else if (!this.onGround() && this.jumpAnimation < 16) {\r\n            this.jumpAnimation += 1;\r\n            return JUMPSPRITE.jump4;\r\n        } else if (!this.onGround() && this.jumpAnimation < 20) {\r\n            this.jumpAnimation += 1;\r\n            return JUMPSPRITE.jump5;\r\n        } else if (!this.onGround() && this.jumpAnimation < 24) {\r\n            this.jumpAnimation += 1;\r\n            return JUMPSPRITE.jump6;\r\n        } else if (!this.onGround() && this.jumpAnimation < 30) {\r\n            this.jumpAnimation += 1;\r\n            return JUMPSPRITE.jump7;\r\n        } else if (!this.onGround() && this.jumpAnimation < 36) {\r\n            this.jumpAnimation += 1;\r\n            return JUMPSPRITE.jump8;\r\n            // } else if (!this.onGround() && this.jumpAnimation < 42) {\r\n            //     this.jumpAnimation += 1;\r\n            //     return JUMPSPRITE.jump9;\r\n        } else if (!this.onGround() && this.jumpAnimation < 46) {\r\n            this.jumpAnimation += 1;\r\n            return JUMPSPRITE.jump10;\r\n        } else if (!this.onGround() && this.jumpAnimation < 50) {\r\n            this.jumpAnimation += 1;\r\n            return JUMPSPRITE.jump11;\r\n        } else if (!this.onGround() && this.jumpAnimation < 54) {\r\n            this.jumpAnimation += 1;\r\n            return JUMPSPRITE.jump12;\r\n        } else if (!this.onGround() && this.jumpAnimation >= 54) {\r\n            this.jumpAnimation = 0;\r\n            return RUNSPRITE.run1;\r\n        // } else if (this.sliding && this.onGround() && this.slideAnimation < 50) {\r\n        //     this.slideAnimation += 1;\r\n        //     return SLIDESPRITE.slide1;\r\n        } else {\r\n            this.slideAnimation = 0;\r\n            return RUNSPRITE.run1;\r\n        }\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.clearRect(0, 0, innerWidth, innerHeight);\r\n        const sprite = this.getFrame();\r\n        ctx.drawImage(\r\n            this.sprites, //image\r\n            sprite[0], //sx\r\n            sprite[1], //sy\r\n            sprite[2], //sWidth\r\n            sprite[3], //sHeight\r\n            this.position[0], //dx\r\n            this.position[1], //dy\r\n            sprite[2], //dWidth\r\n            sprite[3] //dHeight\r\n        );\r\n    }\r\n\r\n    update(ctx) {\r\n        this.jump();\r\n        this.slide();\r\n        this.draw(ctx);\r\n    }\r\n\r\n    bounds() {\r\n        return {\r\n            left: this.x,\r\n            right: this.x + CONSTANTS.KAKASHI_WIDTH,\r\n            top: this.y,\r\n            bottom: this.y + CONSTANTS.KAKASHI_HEIGHT\r\n        };\r\n    }\r\n    \r\n    collidesWith(rock) {\r\n        let collision = false;\r\n        const _overlap = (rock) => {\r\n            if (rock.bounds().left > this.bounds().right || rock.bounds().right < this.bounds().left) {\r\n                return false;\r\n            }\r\n            if (rock.bounds().top < this.bounds().bottom || rock.bounds().bottom > this.bounds().top) {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        // this.eachRock((rock) => {\r\n            if (_overlap(rock)) {\r\n                collision = true;\r\n                console.log(\"hit\");\r\n            }\r\n        return collision;\r\n    }\r\n\r\n}\r\n\r\nexport default Kakashi;\r\n","export default \"src/images/kakashi2.png\";","const CONSTANTS = {\r\n    // FIRE_SPEED: 3,\r\n    ROCK_SPEED: 4,\r\n    WARM_UP_SECONDS: 1,\r\n    // ROCK_SPACING: Math.floor(Math.random() * 128 + 48),\r\n    ROCK_WIDTH: 50,\r\n    GROUND_HEIGHT: 30,\r\n    EDGE_BUFFER: 50,\r\n}\r\n    \r\nclass Background {\r\n    constructor(ctx, image, posY, imgWidth, speed) {\r\n        this.image = image;\r\n        this.speed = speed;\r\n        this.x = 0;\r\n        this.y = posY;\r\n        this.imgWidth = imgWidth;\r\n        this.ctx = ctx;\r\n        // this.ROCK_SPACING = Math.floor(Math.random() * 128 + 48);\r\n\r\n        const firstRockDistance =\r\n            this.imgWidth + (CONSTANTS.WARM_UP_SECONDS * 60 * CONSTANTS.ROCK_SPEED);\r\n\r\n        this.rocks = [\r\n            \r\n            this.randomRock(firstRockDistance),\r\n            this.randomRock(firstRockDistance + this.generateRockSpacing()),\r\n            this.randomRock(firstRockDistance + (this.generateRockSpacing() * 4)),\r\n        ];\r\n    }\r\n\r\n    generateRockSpacing() {\r\n        return Math.floor(Math.random() * 500 + 150);\r\n    }\r\n\r\n    randomRock(x) {\r\n        const height = 100;\r\n\r\n        const rock = {\r\n            left: x,\r\n            right: CONSTANTS.ROCK_WIDTH + x,\r\n            top: 300 - height,\r\n            bottom: height,\r\n            passed: false\r\n        }\r\n        return rock;\r\n    }\r\n\r\n    eachRock(callback) {\r\n        this.rocks.forEach(callback.bind(this));\r\n    }\r\n\r\n    passedRock(kakashi, callback) {\r\n        this.eachRock((rock) => {\r\n            if (rock.right < kakashi.left) {\r\n                if (!rock.passed) {\r\n                    rock.passed = true;\r\n                    callback();\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    collidesWith(kakashi) {\r\n        const _overlap = (rect1, rect2) => {\r\n            if (rect1.left > rect2.right || rect1.right < rect2.left) {\r\n                return false;\r\n            }\r\n            if (rect1.top < rect2.bottom || rect1.bottom > rect2.top) {\r\n                return false;\r\n            }\r\n            return true;\r\n        };\r\n        let collision = false;\r\n        this.eachRock((rock) => {\r\n            if (_overlap(rock, kakashi)) {\r\n                    collision = true;\r\n                    console.log(\"hit\");\r\n                }\r\n        });\r\n        return collision;\r\n    }\r\n\r\n    moveRocks() {\r\n        this.eachRock(function(rock) {\r\n            rock.left -= CONSTANTS.ROCK_SPEED;\r\n            rock.right -= CONSTANTS.ROCK_SPEED;\r\n        });\r\n        if (this.rocks[0].right <= 0) {\r\n            this.rocks.shift();\r\n            const newX = this.rocks[1].left + this.generateRockSpacing();\r\n            this.rocks.push(this.randomRock(newX));\r\n        }\r\n    }\r\n\r\n    drawRocks() {\r\n        this.eachRock(function(rock) {\r\n            this.ctx.fillStyle = \"grey\";\r\n            this.ctx.strokeStyle = \"black\";\r\n            this.ctx.fillRect(\r\n                rock.left,\r\n                rock.top,\r\n                CONSTANTS.ROCK_WIDTH,\r\n                rock.bottom\r\n            );\r\n        \r\n        });\r\n    }\r\n\r\n    draw() {\r\n        this.ctx.clearRect(0, 0, 1000, 300);\r\n        this.ctx.drawImage(this.image, this.x, this.y);\r\n        this.ctx.drawImage(this.image, this.x + this.imgWidth, this.y);\r\n        if (this.imgWidth < 1000) {\r\n            this.ctx.drawImage(this.image, this.x + this.imgWidth * 2, this.y);\r\n        }\r\n        if (this.x <= -this.imgWidth) {\r\n            this.x = 0;\r\n        }\r\n        this.move();\r\n        // this.moveRocks();\r\n    }\r\n\r\n    move() {\r\n        this.x -= this.speed;\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nexport default Background;\r\n\r\n\r\n","const closeMenu = () => {\r\n    const menu = document.getElementsByClassName('menu')[0];\r\n    menu.className = 'menu close';\r\n};\r\n\r\nexport const Menu = {\r\n    menuButtons(RunKakashiRun) {\r\n        const play = document.getElementById('play-button');\r\n\r\n        play.addEventListener('click', e => {\r\n            closeMenu();\r\n\r\n            setTimeout(() => RunKakashiRun.start('play'), 200);\r\n        }\r\n        );\r\n    },\r\n};\r\n","import {collision} from './collision';\r\nimport fireballSrc from \"./images/fireball.png\";\r\n\r\nconst CONSTANTS = {\r\n    SPEED: 7,\r\n    WARM_UP_SECONDS: 5,\r\n    EDGE_BUFFER: 50,\r\n    OBJECT_WIDTH: 70,\r\n    OBJECT_HEIGHT: 40\r\n}\r\n\r\nconst FIRESPRITE = {\r\n    fire1: [0, 0, 70, 40],\r\n    fire2: [0, 40, 70, 40],\r\n    fire3: [0, 80, 70, 40],\r\n    fire4: [0, 120, 70, 40]\r\n}\r\n\r\nclass Fireball {\r\n    constructor() {\r\n        this.fireSprites = new Image();\r\n        this.fireSprites.src = fireballSrc;\r\n        this.fireAnimation = 0;\r\n    }\r\n\r\n    getFrame() {\r\n        if(this.fireAnimation < 5) {\r\n            this.fireAnimation += 1;\r\n            return FIRESPRITE.fire1;\r\n        } else if (this.fireAnimation < 10) {\r\n            this.fireAnimation += 1;\r\n            return FIRESPRITE.fire2;\r\n        } else if (this.fireAnimation < 15) {\r\n            this.fireAnimation += 1;\r\n            return FIRESPRITE.fire3;\r\n        } else if (this.fireAnimation < 20) {\r\n            this.fireAnimation += 1;\r\n            return FIRESPRITE.fire4;\r\n        } else {\r\n            this.fireAnimation = 0;\r\n            return FIRESPRITE.fire1;\r\n        }\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.beginPath();\r\n      \r\n        console.log('fireballl');\r\n        // ctx.clearRect(0, 0, 800, 300);\r\n        const sprite = this.getFrame();\r\n        ctx.drawImage(\r\n            this.fireSprites, //image\r\n            sprite[0], //sx\r\n            sprite[1], //sy\r\n            sprite[2], //sWidth\r\n            sprite[3], //sHeight\r\n            this.position[0], //dx\r\n            this.position[1], //dy\r\n            sprite[2], //dWidth\r\n            sprite[3] //dHeight\r\n        );\r\n    }\r\n\r\n\r\n\r\n    move() {\r\n        this.position[0] -= CONSTANTS.SPEED;\r\n    }\r\n\r\n    outside() {\r\n        return this.position[0] < -100;\r\n    }\r\n\r\n    update(ctx) {\r\n        this.draw(ctx);\r\n        this.move();\r\n    }\r\n}\r\n\r\nexport default Fireball","export default \"src/images/fireball.png\";","import rocksSrc from \"./images/rocks.png\";\r\n\r\nconst CONSTANTS = {\r\n    SPEED: 5,\r\n    ROCK_WIDTH: 75,\r\n    ROCK_HEIGHT: 75\r\n}\r\n\r\nconst ROCK_SPRITES = {\r\n    rock1: [0,0,75,75],\r\n    rock2: [75,0,75,75],\r\n    rock3: [150,0,75,75]\r\n}\r\n\r\n\r\nclass Rock {\r\n    constructor() {\r\n        this.rocks = new Image();\r\n        this.rocks.src = rocksSrc;\r\n        this.num = Math.floor(Math.random() * 3) + 1\r\n\r\n\r\n    }\r\n\r\n    getRock() {\r\n        if (this.num === 1) {\r\n            return ROCK_SPRITES.rock1;\r\n        } else if (this.num === 2) {\r\n            return ROCK_SPRITES.rock2;\r\n        } else {\r\n            return ROCK_SPRITES.rock3;\r\n        }\r\n    }\r\n\r\n    draw(ctx) {\r\n        ctx.beginPath();\r\n\r\n        console.log('rock');\r\n        // ctx.clearRect(0, 0, 800, 300);\r\n        const sprite = this.getRock();\r\n        ctx.drawImage(\r\n            this.rocks, //image\r\n            sprite[0], //sx\r\n            sprite[1], //sy\r\n            sprite[2], //sWidth\r\n            sprite[3], //sHeight\r\n            this.position[0], //dx\r\n            this.position[1], //dy\r\n            // this.x,\r\n            // this.y,\r\n            sprite[2], //dWidth\r\n            sprite[3] //dHeight\r\n        );\r\n    }\r\n\r\n    bounds() {\r\n        return {\r\n            left: this.position[0],\r\n            right: this.position[0] + CONSTANTS.ROCK_WIDTH,\r\n            top: this.position[1],\r\n            bottom: this.position[1] + CONSTANTS.ROCK_HEIGHT\r\n        }\r\n    }\r\n\r\n    move() {\r\n        this.position[0] -= CONSTANTS.SPEED;\r\n        // if (this.position[0] === -20) {\r\n        //     this.position[0] = 900;\r\n        // }\r\n    }\r\n\r\n    update(ctx) {\r\n        this.draw(ctx);\r\n        this.move();\r\n    }\r\n}\r\n\r\nexport default Rock;","export default \"src/images/rocks.png\";","import Kakashi from './kakashi';\r\nimport Background from './background';\r\nimport Score from './score';\r\nimport { Menu } from './menu';\r\nimport backgroundWaterSrc from './images/backgroundWater.jpg';\r\nimport darkTreesSrc from './images/darkTrees.png';\r\nimport grassSrc from './images/grass.png';\r\nimport Fireball from './fireball';\r\nimport Rock from './rock';\r\n\r\n\r\nclass RunKakashiRun {\r\n    constructor(ctx, gameCanvas, bgCtx, treeCtx, grassCtx) {\r\n        this.ctx = ctx;\r\n        this.gameCanvas = gameCanvas;\r\n        this.kakashi = new Kakashi;\r\n        // this.fireball = new Fireball;\r\n        // this.fireball2 = new Fireball;\r\n        // this.fireball3 = new Fireball;\r\n        this.rock = new Rock;\r\n        this.score = new Score(1);\r\n        this.jump = this.jump.bind(this);\r\n        this.slide = this.slide.bind(this);\r\n        this.draw = this.draw.bind(this);\r\n        this.background = this.createBackground(bgCtx, treeCtx, grassCtx);\r\n        this.setButtonListeners();\r\n        this.restart = this.restart.bind(this);\r\n        this.obstacles = [];\r\n\r\n        \r\n\r\n        Menu.menuButtons(this);\r\n    }\r\n\r\n\r\n\r\n    jump(event) {\r\n        if ((event.code === 'Space' || event.code === 'KeyW' || event.code === 'ArrowUp') && this.gamePlaying) {\r\n            event.preventDefault();\r\n            this.kakashi.toggleJump();\r\n        }\r\n    }\r\n\r\n    slide(event) {\r\n        if ((event.code === 'ControlLeft' || event.code === 'KeyS' || event.code === 'ArrowDown') && this.gamePlaying) {\r\n            event.preventDefault();\r\n            this.kakashi.toggleSlide();\r\n        }\r\n    }\r\n\r\n\r\n    setButtonListeners() {\r\n        this.gameCanvas.addEventListener('keydown', this.jump);\r\n        this.gameCanvas.addEventListener('keydown', this.slide);\r\n        this.gameCanvas.addEventListener('keydown', this.restart);\r\n        this.gameCanvas.addEventListener('keydown', e => {\r\n            if (e.code === 'Escape' && this.gamePlaying) {\r\n                e.preventDefault();\r\n            }\r\n        })\r\n    }\r\n\r\n    createBackground(bgCtx, treeCtx, grassCtx) {\r\n        const bgImage = new Image();\r\n        bgImage.src = backgroundWaterSrc;\r\n        this.bg = new Background(bgCtx, bgImage, -35, 1400, 1);\r\n\r\n        const treeImage = new Image();\r\n        treeImage.src = darkTreesSrc;\r\n        this.tree = new Background(treeCtx, treeImage, 115, 400, 3);\r\n\r\n        const grassImage = new Image();\r\n        grassImage.src = grassSrc;\r\n        this.grass = new Background(grassCtx, grassImage, 263, 400, 5);\r\n    }\r\n\r\n    \r\n    generateObstacles() {\r\n        // while (this.obstacles.length < 4) {  \r\n            this.createFireball();\r\n            this.createRock();\r\n            // this.obstacles.shift();\r\n        // }\r\n        // this.createFireball(this.generateObstaclesSpacing())\r\n    }\r\n\r\n    generateObstaclesSpacing() {\r\n        return Math.floor(Math.random() * 500 + 150);\r\n    }\r\n\r\n    eachObstacle(callback) {\r\n        this.obstacles.forEach(callback.bind(this));\r\n    }\r\n    \r\n\r\n    createFireball() {\r\n        this.fireball = null;\r\n        this.fireball2 = null;\r\n        this.fireball3 = null;\r\n        // this.fireballs = [];\r\n        this.fireball = new Fireball();\r\n        this.fireball2 = new Fireball();\r\n        this.fireball3 = new Fireball();\r\n        this.fireball.position = [900, 190];\r\n        this.fireball2.position = [900, 100];\r\n        this.fireball3.position = [900, 145];\r\n        if (this.fireball.position[0] === 0) {\r\n            this.fireball = null;\r\n            this.fireball = new Fireball();\r\n            this.fireball.position = [900, 190];\r\n        }\r\n        // this.fireball.position = [1000, 190];\r\n        // this.fireball2 = new Fireball(1000, 100);\r\n        // this.fireballs.push(this.fireball);\r\n        // this.fireballs.push(this.fireball2);\r\n        this.obstacles.push('fireball')\r\n        if (this.fireball.position[0] < 500) {\r\n            this.obstacles.shift();\r\n        }\r\n        \r\n\r\n        return this.fireball;\r\n    }\r\n\r\n    createRock() {\r\n        this.rock = new Rock();\r\n        this.rock.position = [1100,195];\r\n    }\r\n\r\n    restart() {\r\n        this.kakashi.restart();\r\n        this.gameOver = false;\r\n\r\n        this.score = 0;\r\n        this.kakashi = new Kakashi;\r\n        this.rock = new Rock;\r\n        this.fireball = new Fireball;\r\n        this.background = new Background;\r\n\r\n        this.draw();\r\n    }\r\n\r\n    gameOver() {\r\n        this.kakashi.collidesWith(this.rock);\r\n        this.gameStop();\r\n    }\r\n\r\n    gameOverDraw() {\r\n        this.ctx.font = '48px serif';\r\n        this.strokeText('GAME OVER', 10, 50);\r\n        this.ctx.font = '38px serif';\r\n        this.strokeText(\"Press 'R' to run again\")\r\n    }\r\n\r\n    start() {\r\n        document.getElementById('canvas').focus();\r\n        this.gamePlaying = true;\r\n        this.gameOver = false;\r\n        this.score.score = 0;\r\n        this.kakashi.position = [100, 220];\r\n        // this.createFireball();\r\n        this.createRock();\r\n        this.generateObstacles();\r\n        this.canRestart = false;\r\n     \r\n        // this.fireball.position = [1000,190];\r\n        // this.fireball2.position = [1000, 100];\r\n        // this.fireball3.position = [970, 145];\r\n        this.draw();\r\n    }\r\n\r\n    gameStop() {\r\n        this.gameOver = true;\r\n        this.gameOverDraw();\r\n        this.canRestart = true\r\n    }\r\n\r\n    restartGame(e) {\r\n        if (e.key === 'r' && this.canRestart) {\r\n            e.preventDefault();\r\n            this.start();\r\n        }\r\n    }\r\n\r\n     draw() {\r\n        if (!this.gameOver) {\r\n            requestAnimationFrame(this.draw);\r\n            this.kakashi.update(this.ctx);\r\n            this.score.drawScore(this.ctx);\r\n            this.bg.draw();\r\n            this.tree.draw();\r\n            this.grass.draw();\r\n            \r\n            \r\n            this.fireball.update(this.ctx);\r\n            this.fireball2.update(this.ctx);\r\n            this.fireball3.update(this.ctx);\r\n            this.rock.update(this.ctx);\r\n            let idx = null;\r\n            this.obstacles.forEach((obstacle, i => {\r\n                if (obstacle.outside() === true) {\r\n                    idx = i;\r\n                    console.log(\"outside\")\r\n                }\r\n                if (this.kakashi.collidesWith(this.rock) === true) {\r\n                    console.log(\"hit\")\r\n                }\r\n            }));\r\n            if (idx !== null) {\r\n                this.obstacles.splice(idx, 1);\r\n            }\r\n\r\n            // if (this.kakashi.collidesWith(this.rock, this.fireball) ||\r\n            // this.kakashi.collidesWith(this.rock, this.fireball2 ||\r\n            //     this.kakashi.collidesWith(this.rock, this.fireball3))) {\r\n                //     this.gameStop();\r\n                // }\r\n            // this.grass.drawRocks();\r\n            // this.grass.moveRocks();\r\n            // this.fireballs.forEach((fireball, idx) => {\r\n            //     fireball.animate(this.ctx);\r\n            //     if (fireball.position[0] < -200) {\r\n            //         this.fireballs.splice(idx, 1)\r\n            //     }\r\n            //     if (this.kakashi.collidesWith(rock, firebal)) {\r\n            //         this.gameStop();\r\n            //     }\r\n            // })\r\n            // this.createFireball();\r\n            // this.createRock();\r\n        } else {\r\n            alert(this.score);\r\n            this.restart();\r\n        }\r\n\r\n        // this.background.passedRock();\r\n    }\r\n}\r\n\r\nexport default RunKakashiRun;\r\n","export default \"src/images/backgroundWater.jpg\";","export default \"src/images/darkTrees.png\";","export default \"src/images/grass.png\";","import \"./styles/index.css\";\r\nimport RunKakashiRun from \"./game\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    // document.body.classList.add(\"center\");\r\n    // const card = document.createElement(\"div\");\r\n    // card.classList.add(\"card\", \"center\");\r\n    // card.innerHTML = `<h2>${greeting} Run!</h2>`;\r\n    // document.body.append(card);\r\n    // const imgCard = document.createElement(\"div\");\r\n    // imgCard.classList.add(\"card\", \"center\", \"image-card\");\r\n    // document.body.appendChild(imgCard);\r\n\r\n    const gameCanvas = document.getElementById('canvas');\r\n    const canvasContext = gameCanvas.getContext('2d');\r\n\r\n    const bgCanvas = document.getElementById('bg-canvas');\r\n    const bgCtx = bgCanvas.getContext('2d');\r\n\r\n    const treeCanvas = document.getElementById('tree-canvas');\r\n    const treeCtx = treeCanvas.getContext('2d');\r\n\r\n    const grassCanvas = document.getElementById('grass-canvas');\r\n    const grassCtx = grassCanvas.getContext('2d');\r\n\r\n    const game = new RunKakashiRun(canvasContext, gameCanvas, bgCtx, treeCtx, grassCtx\r\n    );\r\n\r\n});"],"sourceRoot":""}